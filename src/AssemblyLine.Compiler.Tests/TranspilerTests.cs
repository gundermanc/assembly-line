using System;
using System.IO;
using AssemblyLine.Compiler.Backendss;
using Xunit;

namespace AssemblyLine.Compiler.Tests;

public class TranspilerTests
{
    [Fact]
    public void Transpiler_Empty()
    {
        var output = new MemoryStream();
        var transpiler = new Transpiler(new CSharpBackend(output));
        transpiler.TranspileFile(string.Empty.ToStream());

        Assert.Equal("// Generated by Assembly Line Transpiler" + Environment.NewLine + Environment.NewLine, output.AsString());
    }

    [Fact]
    public void Transpiler_TrivialTopLevelReturn()
    {
        var output = new MemoryStream();
        var transpiler = new Transpiler(new CSharpBackend(output));
        transpiler.TranspileFile("return 12345;".ToStream());

        Assert.Equal("// Generated by Assembly Line Transpiler" + Environment.NewLine + "return 12345;", output.AsString());
    }
}
